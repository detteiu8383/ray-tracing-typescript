var S=Object.defineProperty;var j=(o,t,e)=>t in o?S(o,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):o[t]=e;var g=(o,t,e)=>(j(o,typeof t!="symbol"?t+"":t,e),e);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))r(s);new MutationObserver(s=>{for(const a of s)if(a.type==="childList")for(const i of a.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&r(i)}).observe(document,{childList:!0,subtree:!0});function e(s){const a={};return s.integrity&&(a.integrity=s.integrity),s.referrerpolicy&&(a.referrerPolicy=s.referrerpolicy),s.crossorigin==="use-credentials"?a.credentials="include":s.crossorigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function r(s){if(s.ep)return;s.ep=!0;const a=e(s);fetch(s.href,a)}})();class n{constructor(t,e,r){g(this,"e",[0,0,0]);this.e[0]=t,this.e[1]=e,this.e[2]=r}static add(t,e){return new n(t.e[0]+e.e[0],t.e[1]+e.e[1],t.e[2]+e.e[2])}static sub(t,e){return new n(t.e[0]-e.e[0],t.e[1]-e.e[1],t.e[2]-e.e[2])}static scale(t,e){return new n(t.e[0]*e,t.e[1]*e,t.e[2]*e)}static mul(t,e){return new n(t.e[0]*e.e[0],t.e[1]*e.e[1],t.e[2]*e.e[2])}static div(t,e){return new n(t.e[0]/e,t.e[1]/e,t.e[2]/e)}static pow(t,e){return new n(Math.pow(t.e[0],e),Math.pow(t.e[1],e),Math.pow(t.e[2],e))}static mag(t){return Math.sqrt(n.lengthSquared(t))}static lengthSquared(t){return t.e[0]*t.e[0]+t.e[1]*t.e[1]+t.e[2]*t.e[2]}static dot(t,e){return t.e[0]*e.e[0]+t.e[1]*e.e[1]+t.e[2]*e.e[2]}static cross(t,e){return new n(t.e[1]*e.e[2]-t.e[2]*e.e[1],t.e[2]*e.e[0]-t.e[0]*e.e[2],t.e[0]*e.e[1]-t.e[1]*e.e[0])}static normalize(t){const e=n.mag(t);return e===0?new n(0,0,0):n.div(t,e)}static randomUnitVector(){const t=Math.random()*2*Math.PI,e=1-2*Math.random(),r=Math.sqrt(1-e*e);return new n(r*Math.cos(t),r*Math.sin(t),e)}static reflect(t,e){return n.sub(t,n.scale(e,2*n.dot(t,e)))}static refract(t,e,r){const s=n.dot(t,e),a=1-r*r*(1-s*s);return a>0?n.sub(n.scale(n.sub(t,n.scale(e,s)),r),n.scale(e,Math.sqrt(a))):new n(0,0,0)}}class y{constructor(t,e){this.origin=t,this.direction=e}at(t){return n.add(this.origin,n.scale(this.direction,t))}}class F{constructor(t,e,r,s,a){g(this,"origin");g(this,"lowerLeftCorner");g(this,"horizontal");g(this,"vertical");const i=s*Math.PI/180,l=Math.tan(i/2),f=2*l,h=a*f,d=n.normalize(n.sub(t,e)),u=n.normalize(n.cross(r,d)),p=n.cross(d,u);this.origin=t,this.horizontal=n.scale(u,h),this.vertical=n.scale(p,f),this.lowerLeftCorner=n.sub(n.sub(n.sub(this.origin,n.div(this.horizontal,2)),n.div(this.vertical,2)),d)}getRay(t,e){return new y(this.origin,n.sub(n.add(n.add(this.lowerLeftCorner,n.scale(this.horizontal,t)),n.scale(this.vertical,e)),this.origin))}}class c extends n{constructor(t,e,r){super(t,e,r)}static legalize(t){return new c(Math.min(Math.max(t.e[0],0),1),Math.min(Math.max(t.e[1],0),1),Math.min(Math.max(t.e[2],0),1))}static writeColor(t,e,r,s){const a=c.div(t,s),i=c.pow(a,1/2.2),l=c.scale(c.legalize(i),255);r[e]=l.e[0],r[e+1]=l.e[1],r[e+2]=l.e[2],r[e+3]=255}}class H{constructor(t){g(this,"objects",[]);t&&(this.objects=t)}hit(t,e,r){let s=r,a=null;for(const i of this.objects){const l=i.hit(t,e,s);l&&(s=l.t,a=l)}return a}add(t){this.objects.push(t)}clear(){this.objects=[]}}class b{constructor(t,e,r){this.center=t,this.radius=e,this.material=r}hit(t,e,r){const s=n.sub(t.origin,this.center),a=n.lengthSquared(t.direction),i=n.dot(s,t.direction),l=n.lengthSquared(s)-this.radius*this.radius,f=i*i-a*l;if(f>0){const h=Math.sqrt(f),d=(-i-h)/a;if(d<r&&d>e){const p=t.at(d),m=n.div(n.sub(p,this.center),this.radius),w=this.radius>=0;return{point:p,normal:w?m:n.scale(m,-1),material:this.material,t:d,frontFace:w}}const u=(-i+h)/a;if(u<r&&u>e){const p=t.at(u),m=n.div(n.sub(p,this.center),this.radius),w=this.radius<0;return{point:p,normal:w?m:n.scale(m,-1),material:this.material,t:u,frontFace:w}}}return null}}class x{scatter(t,e){return{scattered:!1}}}class q extends x{constructor(t){super(),this.albedo=t}scatter(t,e){const r=n.add(e.normal,n.randomUnitVector()),s=new y(e.point,r);return{scattered:!0,scatteredRay:s,attenuation:this.albedo}}}class U extends x{constructor(t,e=0){super(),this.albedo=t,this.fuzz=e}scatter(t,e){const r=n.reflect(n.normalize(t.direction),e.normal),s=new y(e.point,n.add(r,n.scale(n.randomUnitVector(),this.fuzz))),a=this.albedo;return{scattered:n.dot(s.direction,e.normal)>0,scatteredRay:s,attenuation:a}}}class L extends x{constructor(t){super(),this.refractiveIndex=t}scatter(t,e){const r=new c(1,1,1),s=e.frontFace?1/this.refractiveIndex:this.refractiveIndex,a=n.normalize(t.direction),i=Math.min(-n.dot(a,e.normal),1),l=Math.sqrt(1-i*i);if(s*l>1||Math.random()<A(i,s)){const d=n.reflect(a,e.normal),u=new y(e.point,d);return{scattered:!0,scatteredRay:u,attenuation:r}}const f=n.refract(a,e.normal,s),h=new y(e.point,f);return{scattered:!0,scatteredRay:h,attenuation:r}}}const A=(o,t)=>{let e=(1-t)/(1+t);return e*=e,e+(1-e)*Math.pow(1-o,5)},R=(o,t,e)=>{if(e<=0)return new c(0,0,0);const r=t.hit(o,.001,1/0);if(r){const i=r.material.scatter(o,r);return i.scattered?c.mul(i.attenuation,R(i.scatteredRay,t,e-1)):new c(0,0,0)}const s=n.normalize(o.direction),a=.5*(s.e[1]+1);return c.add(c.scale(new c(1,1,1),1-a),c.scale(new c(.5,.7,1),a))},B=()=>{const o=1.7777777777777777,t=400,e=Math.floor(t/o),r=4,s=new Uint8Array(t*e*r),a=100,i=50,l=new H;l.add(new b(new n(0,0,-1),.5,new q(new c(.1,.2,.5)))),l.add(new b(new n(0,-100.5,-1),100,new q(new c(.8,.8,0)))),l.add(new b(new n(1,0,-1),.5,new U(new c(.8,.6,.2),.3))),l.add(new b(new n(-1,0,-1),.5,new L(1.5))),l.add(new b(new n(-1,0,-1),-.45,new L(1.5)));const f=new F(new n(-2,2,1),new n(0,0,-1),new n(0,1,0),20,o);for(let m=e-1;m>=0;m--)for(let w=0;w<t;w++){let M=new c(0,0,0);for(let z=0;z<a;z++){const I=(w+Math.random())/(t-1),C=(m+Math.random())/(e-1),P=f.getRay(I,C);M=c.add(M,R(P,l,i))}const D=((e-m)*t+w)*r;c.writeColor(M,D,s,a)}const h=document.getElementById("canvas");h.width=t,h.height=e;const d=h.getContext("2d");if(d===null)throw new Error("Failed to get context");const u=new Uint8ClampedArray(s),p=new ImageData(u,t,e);d.putImageData(p,0,0)};B();
