var C=Object.defineProperty;var D=(s,e,t)=>e in s?C(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;var p=(s,e,t)=>(D(s,typeof e!="symbol"?e+"":e,t),t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))o(r);new MutationObserver(r=>{for(const i of r)if(i.type==="childList")for(const a of i.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&o(a)}).observe(document,{childList:!0,subtree:!0});function t(r){const i={};return r.integrity&&(i.integrity=r.integrity),r.referrerpolicy&&(i.referrerPolicy=r.referrerpolicy),r.crossorigin==="use-credentials"?i.credentials="include":r.crossorigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function o(r){if(r.ep)return;r.ep=!0;const i=t(r);fetch(r.href,i)}})();class n{constructor(e,t,o){p(this,"e",[0,0,0]);this.e[0]=e,this.e[1]=t,this.e[2]=o}static add(e,t){return new n(e.e[0]+t.e[0],e.e[1]+t.e[1],e.e[2]+t.e[2])}static sub(e,t){return new n(e.e[0]-t.e[0],e.e[1]-t.e[1],e.e[2]-t.e[2])}static scale(e,t){return new n(e.e[0]*t,e.e[1]*t,e.e[2]*t)}static mul(e,t){return new n(e.e[0]*t.e[0],e.e[1]*t.e[1],e.e[2]*t.e[2])}static div(e,t){return new n(e.e[0]/t,e.e[1]/t,e.e[2]/t)}static mag(e){return Math.sqrt(n.lengthSquared(e))}static lengthSquared(e){return e.e[0]*e.e[0]+e.e[1]*e.e[1]+e.e[2]*e.e[2]}static dot(e,t){return e.e[0]*t.e[0]+e.e[1]*t.e[1]+e.e[2]*t.e[2]}static cross(e,t){return new n(e.e[1]*t.e[2]-e.e[2]*t.e[1],e.e[2]*t.e[0]-e.e[0]*t.e[2],e.e[0]*t.e[1]-e.e[1]*t.e[0])}static normalize(e){const t=n.mag(e);return t===0?new n(0,0,0):n.div(e,t)}}class c extends n{constructor(e,t,o){super(e,t,o)}static legalize(e){return new c(Math.min(Math.max(e.e[0],0),1),Math.min(Math.max(e.e[1],0),1),Math.min(Math.max(e.e[2],0),1))}static writeColor(e,t,o){const r=c.scale(c.legalize(e),255);o[t]=r.e[0],o[t+1]=r.e[1],o[t+2]=r.e[2],o[t+3]=255}}class I{constructor(e,t){this.origin=e,this.direction=t}at(e){return n.add(this.origin,n.scale(this.direction,e))}}const O=(s,e,t)=>{const o=n.sub(t.origin,s),r=n.lengthSquared(t.direction),i=n.dot(o,t.direction),a=n.lengthSquared(o)-e*e,l=i*i-r*a;return l<0?-1:(-i-Math.sqrt(l))/r},A=s=>{const e=new n(0,0,-1);let t=O(e,.5,s);if(t>0){const r=n.normalize(n.sub(s.at(t),e));return c.scale(new c(r.e[0]+1,r.e[1]+1,r.e[2]+1),.5)}const o=n.normalize(s.direction);return t=.5*(o.e[1]+1),c.add(c.scale(new c(1,1,1),1-t),c.scale(new c(.5,.7,1),t))},E=()=>{const s=1.7777777777777777,e=400,t=Math.floor(e/s),o=4,r=new Uint8Array(e*t*o),i=2,a=s*i,l=1,h=new n(0,0,0),m=new n(a,0,0),g=new n(0,i,0),y=n.sub(n.sub(n.sub(h,n.div(m,2)),n.div(g,2)),new n(0,0,l));for(let u=t-1;u>=0;u--)for(let d=0;d<e;d++){const x=d/(e-1),q=u/(t-1),L=((t-u)*e+d)*o,z=new I(h,n.sub(n.add(n.add(y,n.scale(m,x)),n.scale(g,q)),h)),S=A(z);c.writeColor(S,L,r)}const f=document.getElementById("canvas");f.width=e,f.height=t;const w=f.getContext("2d");if(w===null)throw new Error("Failed to get context");const M=new Uint8ClampedArray(r),b=new ImageData(M,e,t);w.putImageData(b,0,0)};E();
