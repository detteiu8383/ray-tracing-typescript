var F=Object.defineProperty;var P=(i,t,e)=>t in i?F(i,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):i[t]=e;var g=(i,t,e)=>(P(i,typeof t!="symbol"?t+"":t,e),e);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))s(r);new MutationObserver(r=>{for(const a of r)if(a.type==="childList")for(const o of a.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&s(o)}).observe(document,{childList:!0,subtree:!0});function e(r){const a={};return r.integrity&&(a.integrity=r.integrity),r.referrerpolicy&&(a.referrerPolicy=r.referrerpolicy),r.crossorigin==="use-credentials"?a.credentials="include":r.crossorigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function s(r){if(r.ep)return;r.ep=!0;const a=e(r);fetch(r.href,a)}})();class n{constructor(t,e,s){g(this,"e",[0,0,0]);this.e[0]=t,this.e[1]=e,this.e[2]=s}static add(t,e){return new n(t.e[0]+e.e[0],t.e[1]+e.e[1],t.e[2]+e.e[2])}static sub(t,e){return new n(t.e[0]-e.e[0],t.e[1]-e.e[1],t.e[2]-e.e[2])}static scale(t,e){return new n(t.e[0]*e,t.e[1]*e,t.e[2]*e)}static mul(t,e){return new n(t.e[0]*e.e[0],t.e[1]*e.e[1],t.e[2]*e.e[2])}static div(t,e){return new n(t.e[0]/e,t.e[1]/e,t.e[2]/e)}static pow(t,e){return new n(Math.pow(t.e[0],e),Math.pow(t.e[1],e),Math.pow(t.e[2],e))}static mag(t){return Math.sqrt(n.lengthSquared(t))}static lengthSquared(t){return t.e[0]*t.e[0]+t.e[1]*t.e[1]+t.e[2]*t.e[2]}static dot(t,e){return t.e[0]*e.e[0]+t.e[1]*e.e[1]+t.e[2]*e.e[2]}static cross(t,e){return new n(t.e[1]*e.e[2]-t.e[2]*e.e[1],t.e[2]*e.e[0]-t.e[0]*e.e[2],t.e[0]*e.e[1]-t.e[1]*e.e[0])}static normalize(t){const e=n.mag(t);return e===0?new n(0,0,0):n.div(t,e)}static randomUnitVector(){const t=Math.random()*2*Math.PI,e=1-2*Math.random(),s=Math.sqrt(1-e*e);return new n(s*Math.cos(t),s*Math.sin(t),e)}static reflect(t,e){return n.sub(t,n.scale(e,2*n.dot(t,e)))}static refract(t,e,s){const r=n.dot(t,e),a=1-s*s*(1-r*r);return a>0?n.sub(n.scale(n.sub(t,n.scale(e,r)),s),n.scale(e,Math.sqrt(a))):new n(0,0,0)}}class y{constructor(t,e){this.origin=t,this.direction=e}at(t){return n.add(this.origin,n.scale(this.direction,t))}}class j{constructor(t,e,s){g(this,"lowerLeftCorner");g(this,"horizontal");g(this,"vertical");this.origin=t;const r=s*e,a=1;this.horizontal=new n(r,0,0),this.vertical=new n(0,e,0),this.lowerLeftCorner=n.sub(n.sub(n.sub(t,n.div(this.horizontal,2)),n.div(this.vertical,2)),new n(0,0,a))}getRay(t,e){return new y(this.origin,n.sub(n.add(n.add(this.lowerLeftCorner,n.scale(this.horizontal,t)),n.scale(this.vertical,e)),this.origin))}}class c extends n{constructor(t,e,s){super(t,e,s)}static legalize(t){return new c(Math.min(Math.max(t.e[0],0),1),Math.min(Math.max(t.e[1],0),1),Math.min(Math.max(t.e[2],0),1))}static writeColor(t,e,s,r){const a=c.div(t,r),o=c.pow(a,1/2.2),l=c.scale(c.legalize(o),255);s[e]=l.e[0],s[e+1]=l.e[1],s[e+2]=l.e[2],s[e+3]=255}}class U{constructor(t){g(this,"objects",[]);t&&(this.objects=t)}hit(t,e,s){let r=s,a=null;for(const o of this.objects){const l=o.hit(t,e,r);l&&(r=l.t,a=l)}return a}add(t){this.objects.push(t)}clear(){this.objects=[]}}class b{constructor(t,e,s){this.center=t,this.radius=e,this.material=s}hit(t,e,s){const r=n.sub(t.origin,this.center),a=n.lengthSquared(t.direction),o=n.dot(r,t.direction),l=n.lengthSquared(r)-this.radius*this.radius,p=o*o-a*l;if(p>0){const m=Math.sqrt(p),h=(-o-m)/a;if(h<s&&h>e){const f=t.at(h),d=n.div(n.sub(f,this.center),this.radius),u=this.radius>=0;return{point:f,normal:u?d:n.scale(d,-1),material:this.material,t:h,frontFace:u}}const w=(-o+m)/a;if(w<s&&w>e){const f=t.at(w),d=n.div(n.sub(f,this.center),this.radius),u=this.radius<0;return{point:f,normal:u?d:n.scale(d,-1),material:this.material,t:w,frontFace:u}}}return null}}class x{scatter(t,e){return{scattered:!1}}}class L extends x{constructor(t){super(),this.albedo=t}scatter(t,e){const s=n.add(e.normal,n.randomUnitVector()),r=new y(e.point,s);return{scattered:!0,scatteredRay:r,attenuation:this.albedo}}}class A extends x{constructor(t,e=0){super(),this.albedo=t,this.fuzz=e}scatter(t,e){const s=n.reflect(n.normalize(t.direction),e.normal),r=new y(e.point,n.add(s,n.scale(n.randomUnitVector(),this.fuzz))),a=this.albedo;return{scattered:n.dot(r.direction,e.normal)>0,scatteredRay:r,attenuation:a}}}class q extends x{constructor(t){super(),this.refractiveIndex=t}scatter(t,e){const s=new c(1,1,1),r=e.frontFace?1/this.refractiveIndex:this.refractiveIndex,a=n.normalize(t.direction),o=Math.min(-n.dot(a,e.normal),1),l=Math.sqrt(1-o*o);if(r*l>1||Math.random()<B(o,r)){const h=n.reflect(a,e.normal),w=new y(e.point,h);return{scattered:!0,scatteredRay:w,attenuation:s}}const p=n.refract(a,e.normal,r),m=new y(e.point,p);return{scattered:!0,scatteredRay:m,attenuation:s}}}const B=(i,t)=>{let e=(1-t)/(1+t);return e*=e,e+(1-e)*Math.pow(1-i,5)},R=(i,t,e)=>{if(e<=0)return new c(0,0,0);const s=t.hit(i,.001,1/0);if(s){const o=s.material.scatter(i,s);return o.scattered?c.mul(o.attenuation,R(o.scatteredRay,t,e-1)):new c(0,0,0)}const r=n.normalize(i.direction),a=.5*(r.e[1]+1);return c.add(c.scale(new c(1,1,1),1-a),c.scale(new c(.5,.7,1),a))},E=()=>{const i=1.7777777777777777,t=400,e=Math.floor(t/i),s=4,r=new Uint8Array(t*e*s),a=100,o=50,l=new U;l.add(new b(new n(0,0,-1),.5,new L(new c(.1,.2,.5)))),l.add(new b(new n(0,-100.5,-1),100,new L(new c(.8,.8,0)))),l.add(new b(new n(1,0,-1),.5,new A(new c(.8,.6,.2),.3))),l.add(new b(new n(-1,0,-1),.5,new q(1.5))),l.add(new b(new n(-1,0,-1),-.45,new q(1.5)));const p=new j(new n(0,0,0),2,i);for(let d=e-1;d>=0;d--)for(let u=0;u<t;u++){let M=new c(0,0,0);for(let z=0;z<a;z++){const C=(u+Math.random())/(t-1),I=(d+Math.random())/(e-1),S=p.getRay(C,I);M=c.add(M,R(S,l,o))}const D=((e-d)*t+u)*s;c.writeColor(M,D,r,a)}const m=document.getElementById("canvas");m.width=t,m.height=e;const h=m.getContext("2d");if(h===null)throw new Error("Failed to get context");const w=new Uint8ClampedArray(r),f=new ImageData(w,t,e);h.putImageData(f,0,0)};E();
