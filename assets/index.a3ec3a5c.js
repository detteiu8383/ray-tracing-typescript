var A=Object.defineProperty;var H=(i,t,e)=>t in i?A(i,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):i[t]=e;var m=(i,t,e)=>(H(i,typeof t!="symbol"?t+"":t,e),e);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const a of document.querySelectorAll('link[rel="modulepreload"]'))s(a);new MutationObserver(a=>{for(const r of a)if(r.type==="childList")for(const o of r.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&s(o)}).observe(document,{childList:!0,subtree:!0});function e(a){const r={};return a.integrity&&(r.integrity=a.integrity),a.referrerpolicy&&(r.referrerPolicy=a.referrerpolicy),a.crossorigin==="use-credentials"?r.credentials="include":a.crossorigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(a){if(a.ep)return;a.ep=!0;const r=e(a);fetch(a.href,r)}})();class n{constructor(t,e,s){m(this,"e",[0,0,0]);this.e[0]=t,this.e[1]=e,this.e[2]=s}static add(t,e){return new n(t.e[0]+e.e[0],t.e[1]+e.e[1],t.e[2]+e.e[2])}static sub(t,e){return new n(t.e[0]-e.e[0],t.e[1]-e.e[1],t.e[2]-e.e[2])}static scale(t,e){return new n(t.e[0]*e,t.e[1]*e,t.e[2]*e)}static mul(t,e){return new n(t.e[0]*e.e[0],t.e[1]*e.e[1],t.e[2]*e.e[2])}static div(t,e){return new n(t.e[0]/e,t.e[1]/e,t.e[2]/e)}static pow(t,e){return new n(Math.pow(t.e[0],e),Math.pow(t.e[1],e),Math.pow(t.e[2],e))}static mag(t){return Math.sqrt(n.lengthSquared(t))}static lengthSquared(t){return t.e[0]*t.e[0]+t.e[1]*t.e[1]+t.e[2]*t.e[2]}static dot(t,e){return t.e[0]*e.e[0]+t.e[1]*e.e[1]+t.e[2]*e.e[2]}static cross(t,e){return new n(t.e[1]*e.e[2]-t.e[2]*e.e[1],t.e[2]*e.e[0]-t.e[0]*e.e[2],t.e[0]*e.e[1]-t.e[1]*e.e[0])}static normalize(t){const e=n.mag(t);return e===0?new n(0,0,0):n.div(t,e)}static randomUnitVector(){const t=Math.random()*2*Math.PI,e=1-2*Math.random(),s=Math.sqrt(1-e*e);return new n(s*Math.cos(t),s*Math.sin(t),e)}static randomInUnitDisk(){const t=Math.random()*2*Math.PI,e=Math.sqrt(Math.random());return new n(e*Math.cos(t),e*Math.sin(t),0)}static reflect(t,e){return n.sub(t,n.scale(e,2*n.dot(t,e)))}static refract(t,e,s){const a=n.dot(t,e),r=1-s*s*(1-a*a);return r>0?n.sub(n.scale(n.sub(t,n.scale(e,a)),s),n.scale(e,Math.sqrt(r))):new n(0,0,0)}}class b{constructor(t,e){this.origin=t,this.direction=e}at(t){return n.add(this.origin,n.scale(this.direction,t))}}class B{constructor(t,e,s,a,r,o,d){m(this,"origin");m(this,"lowerLeftCorner");m(this,"horizontal");m(this,"vertical");m(this,"u");m(this,"v");m(this,"w");m(this,"lensRadius");const l=a*Math.PI/180,h=Math.tan(l/2),u=2*h,w=r*u;this.w=n.normalize(n.sub(t,e)),this.u=n.normalize(n.cross(s,this.w)),this.v=n.cross(this.w,this.u),this.origin=t,this.horizontal=n.scale(this.u,w*d),this.vertical=n.scale(this.v,u*d),this.lowerLeftCorner=n.sub(n.sub(n.sub(this.origin,n.div(this.horizontal,2)),n.div(this.vertical,2)),n.scale(this.w,d)),this.lensRadius=o/2}getRay(t,e){const s=n.scale(n.randomInUnitDisk(),this.lensRadius),a=n.add(n.scale(this.u,s.e[0]),n.scale(this.v,s.e[1]));return new b(n.add(this.origin,a),n.sub(n.sub(n.add(n.add(this.lowerLeftCorner,n.scale(this.horizontal,t)),n.scale(this.vertical,e)),this.origin),a))}}class c extends n{constructor(t,e,s){super(t,e,s)}static legalize(t){return new c(Math.min(Math.max(t.e[0],0),1),Math.min(Math.max(t.e[1],0),1),Math.min(Math.max(t.e[2],0),1))}static writeColor(t,e,s,a){const r=c.div(t,a),o=c.pow(r,1/2.2),d=c.scale(c.legalize(o),255);s[e]=d.e[0],s[e+1]=d.e[1],s[e+2]=d.e[2],s[e+3]=255}}class E{constructor(t){m(this,"objects",[]);t&&(this.objects=t)}hit(t,e,s){let a=s,r=null;for(const o of this.objects){const d=o.hit(t,e,a);d&&(a=d.t,r=d)}return r}add(t){this.objects.push(t)}clear(){this.objects=[]}}class p{constructor(t,e,s){this.center=t,this.radius=e,this.material=s}hit(t,e,s){const a=n.sub(t.origin,this.center),r=n.lengthSquared(t.direction),o=n.dot(a,t.direction),d=n.lengthSquared(a)-this.radius*this.radius,l=o*o-r*d;if(l>0){const h=Math.sqrt(l),u=(-o-h)/r;if(u<s&&u>e){const g=t.at(u),M=n.div(n.sub(g,this.center),this.radius),f=this.radius>=0;return{point:g,normal:f?M:n.scale(M,-1),material:this.material,t:u,frontFace:f}}const w=(-o+h)/r;if(w<s&&w>e){const g=t.at(w),M=n.div(n.sub(g,this.center),this.radius),f=this.radius<0;return{point:g,normal:f?M:n.scale(M,-1),material:this.material,t:w,frontFace:f}}}return null}}class q{scatter(t,e){return{scattered:!1}}}class I extends q{constructor(t){super(),this.albedo=t}scatter(t,e){const s=n.add(e.normal,n.randomUnitVector()),a=new b(e.point,s);return{scattered:!0,scatteredRay:a,attenuation:this.albedo}}}class D extends q{constructor(t,e=0){super(),this.albedo=t,this.fuzz=e}scatter(t,e){const s=n.reflect(n.normalize(t.direction),e.normal),a=new b(e.point,n.add(s,n.scale(n.randomUnitVector(),this.fuzz))),r=this.albedo;return{scattered:n.dot(a.direction,e.normal)>0,scatteredRay:a,attenuation:r}}}class W extends q{constructor(t){super(),this.refractiveIndex=t}scatter(t,e){const s=new c(1,1,1),a=e.frontFace?1/this.refractiveIndex:this.refractiveIndex,r=n.normalize(t.direction),o=Math.min(-n.dot(r,e.normal),1),d=Math.sqrt(1-o*o);if(a*d>1||Math.random()<N(o,a)){const u=n.reflect(r,e.normal),w=new b(e.point,u);return{scattered:!0,scatteredRay:w,attenuation:s}}const l=n.refract(r,e.normal,a),h=new b(e.point,l);return{scattered:!0,scatteredRay:h,attenuation:s}}}const N=(i,t)=>{let e=(1-t)/(1+t);return e*=e,e+(1-e)*Math.pow(1-i,5)},C=(i,t,e)=>{if(e<=0)return new c(0,0,0);const s=t.hit(i,.001,1/0);if(s){const o=s.material.scatter(i,s);return o.scattered?c.mul(o.attenuation,C(o.scatteredRay,t,e-1)):new c(0,0,0)}const a=n.normalize(i.direction),r=.5*(a.e[1]+1);return c.add(c.scale(new c(1,1,1),1-r),c.scale(new c(.5,.7,1),r))},T=()=>{const i=new E,t=new I(new c(.5,.5,.5));i.add(new p(new n(0,-1e3,0),1e3,t));for(let r=-11;r<11;r++)for(let o=-11;o<11;o++){const d=Math.random(),l=new n(r+.9*Math.random(),.2,o+.9*Math.random());if(n.mag(n.sub(l,new n(4,.2,0)))>.9)if(d<.8){const h=new c(Math.random()*Math.random(),Math.random()*Math.random(),Math.random()*Math.random());i.add(new p(l,.2,new I(h)))}else if(d<.95){const h=new c(.5*Math.random()+.5,.5*Math.random()+.5,.5*Math.random()+.5);i.add(new p(l,.2,new D(h,.5*Math.random())))}else i.add(new p(l,.2,new W(1.5)))}const e=new W(1.5);i.add(new p(new n(0,1,0),1,e));const s=new I(new c(.4,.2,.1));i.add(new p(new n(-4,1,0),1,s));const a=new D(new c(.7,.6,.5),0);return i.add(new p(new n(4,1,0),1,a)),i},O=()=>{const e=Math.floor(200),s=4,a=new Uint8Array(300*e*s),r=10,o=50,d=T(),l=new n(13,2,3),h=new n(0,0,0),u=new n(0,1,0),w=10,g=.1,M=new B(l,h,u,20,1.5,g,w);for(let x=e-1;x>=0;x--)for(let z=0;z<300;z++){let R=new c(0,0,0);for(let L=0;L<r;L++){const F=(z+Math.random())/299,j=(x+Math.random())/(e-1),k=M.getRay(F,j);R=c.add(R,C(k,d,o))}const U=((e-x)*300+z)*s;c.writeColor(R,U,a,r)}const f=document.getElementById("canvas");f.width=300,f.height=e;const y=f.getContext("2d");if(y===null)throw new Error("Failed to get context");const P=new Uint8ClampedArray(a),S=new ImageData(P,300,e);y.putImageData(S,0,0)};O();
