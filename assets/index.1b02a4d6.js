var S=Object.defineProperty;var D=(a,t,e)=>t in a?S(a,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):a[t]=e;var g=(a,t,e)=>(D(a,typeof t!="symbol"?t+"":t,e),e);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))s(r);new MutationObserver(r=>{for(const o of r)if(o.type==="childList")for(const i of o.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&s(i)}).observe(document,{childList:!0,subtree:!0});function e(r){const o={};return r.integrity&&(o.integrity=r.integrity),r.referrerpolicy&&(o.referrerPolicy=r.referrerpolicy),r.crossorigin==="use-credentials"?o.credentials="include":r.crossorigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function s(r){if(r.ep)return;r.ep=!0;const o=e(r);fetch(r.href,o)}})();class n{constructor(t,e,s){g(this,"e",[0,0,0]);this.e[0]=t,this.e[1]=e,this.e[2]=s}static add(t,e){return new n(t.e[0]+e.e[0],t.e[1]+e.e[1],t.e[2]+e.e[2])}static sub(t,e){return new n(t.e[0]-e.e[0],t.e[1]-e.e[1],t.e[2]-e.e[2])}static scale(t,e){return new n(t.e[0]*e,t.e[1]*e,t.e[2]*e)}static mul(t,e){return new n(t.e[0]*e.e[0],t.e[1]*e.e[1],t.e[2]*e.e[2])}static div(t,e){return new n(t.e[0]/e,t.e[1]/e,t.e[2]/e)}static pow(t,e){return new n(Math.pow(t.e[0],e),Math.pow(t.e[1],e),Math.pow(t.e[2],e))}static mag(t){return Math.sqrt(n.lengthSquared(t))}static lengthSquared(t){return t.e[0]*t.e[0]+t.e[1]*t.e[1]+t.e[2]*t.e[2]}static dot(t,e){return t.e[0]*e.e[0]+t.e[1]*e.e[1]+t.e[2]*e.e[2]}static cross(t,e){return new n(t.e[1]*e.e[2]-t.e[2]*e.e[1],t.e[2]*e.e[0]-t.e[0]*e.e[2],t.e[0]*e.e[1]-t.e[1]*e.e[0])}static normalize(t){const e=n.mag(t);return e===0?new n(0,0,0):n.div(t,e)}static randomUnitVector(){const t=Math.random()*2*Math.PI,e=1-2*Math.random(),s=Math.sqrt(1-e*e);return new n(s*Math.cos(t),s*Math.sin(t),e)}}class R{constructor(t,e){this.origin=t,this.direction=e}at(t){return n.add(this.origin,n.scale(this.direction,t))}}class I{constructor(t,e,s){g(this,"lowerLeftCorner");g(this,"horizontal");g(this,"vertical");this.origin=t;const r=s*e,o=1;this.horizontal=new n(r,0,0),this.vertical=new n(0,e,0),this.lowerLeftCorner=n.sub(n.sub(n.sub(t,n.div(this.horizontal,2)),n.div(this.vertical,2)),new n(0,0,o))}getRay(t,e){return new R(this.origin,n.sub(n.add(n.add(this.lowerLeftCorner,n.scale(this.horizontal,t)),n.scale(this.vertical,e)),this.origin))}}class c extends n{constructor(t,e,s){super(t,e,s)}static legalize(t){return new c(Math.min(Math.max(t.e[0],0),1),Math.min(Math.max(t.e[1],0),1),Math.min(Math.max(t.e[2],0),1))}static writeColor(t,e,s,r){const o=c.div(t,r),i=c.pow(o,1/2.2),l=c.scale(c.legalize(i),255);s[e]=l.e[0],s[e+1]=l.e[1],s[e+2]=l.e[2],s[e+3]=255}}class P{constructor(t){g(this,"objects",[]);t&&(this.objects=t)}hit(t,e,s){let r=s,o=null;for(const i of this.objects){const l=i.hit(t,e,r);l&&(r=l.t,o=l)}return o}add(t){this.objects.push(t)}clear(){this.objects=[]}}class y{constructor(t,e){this.center=t,this.radius=e}hit(t,e,s){const r=n.sub(t.origin,this.center),o=n.lengthSquared(t.direction),i=n.dot(r,t.direction),l=n.lengthSquared(r)-this.radius*this.radius,M=i*i-o*l;if(M>0){const f=Math.sqrt(M),u=(-i-f)/o;if(u<s&&u>e){const m=t.at(u),d=n.div(n.sub(m,this.center),this.radius),h=this.radius>=0;return{point:m,normal:h?d:n.scale(d,-1),t:u,frontFace:h}}const w=(-i+f)/o;if(w<s&&w>e){const m=t.at(w),d=n.div(n.sub(m,this.center),this.radius),h=this.radius<0;return{point:m,normal:h?d:n.scale(d,-1),t:w,frontFace:h}}}return null}}const x=(a,t,e)=>{if(e<=0)return new c(0,0,0);const s=t.hit(a,.001,1/0);if(s){const i=s.point,l=n.add(n.add(i,s.normal),n.randomUnitVector());return c.scale(x(new R(i,n.sub(l,i)),t,e-1),.5)}const r=n.normalize(a.direction),o=.5*(r.e[1]+1);return c.add(c.scale(new c(1,1,1),1-o),c.scale(new c(.5,.7,1),o))},j=()=>{const a=1.7777777777777777,t=400,e=Math.floor(t/a),s=4,r=new Uint8Array(t*e*s),o=100,i=50,l=new P;l.add(new y(new n(0,0,-1),.5)),l.add(new y(new n(0,-100.5,-1),100));const M=new I(new n(0,0,0),2,a);for(let d=e-1;d>=0;d--)for(let h=0;h<t;h++){let p=new c(0,0,0);for(let b=0;b<o;b++){const q=(h+Math.random())/(t-1),z=(d+Math.random())/(e-1),C=M.getRay(q,z);p=c.add(p,x(C,l,i))}const L=((e-d)*t+h)*s;c.writeColor(p,L,r,o)}const f=document.getElementById("canvas");f.width=t,f.height=e;const u=f.getContext("2d");if(u===null)throw new Error("Failed to get context");const w=new Uint8ClampedArray(r),m=new ImageData(w,t,e);u.putImageData(m,0,0)};j();
