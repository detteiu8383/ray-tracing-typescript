var f=Object.defineProperty;var p=(o,e,t)=>e in o?f(o,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):o[e]=t;var d=(o,e,t)=>(p(o,typeof e!="symbol"?e+"":e,t),t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))n(i);new MutationObserver(i=>{for(const r of i)if(r.type==="childList")for(const c of r.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&n(c)}).observe(document,{childList:!0,subtree:!0});function t(i){const r={};return i.integrity&&(r.integrity=i.integrity),i.referrerpolicy&&(r.referrerPolicy=i.referrerpolicy),i.crossorigin==="use-credentials"?r.credentials="include":i.crossorigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function n(i){if(i.ep)return;i.ep=!0;const r=t(i);fetch(i.href,r)}})();class a{constructor(e,t,n){d(this,"e",[0,0,0]);this.e[0]=e,this.e[1]=t,this.e[2]=n}static add(e,t){return new a(e.e[0]+t.e[0],e.e[1]+t.e[1],e.e[2]+t.e[2])}static sub(e,t){return new a(e.e[0]-t.e[0],e.e[1]-t.e[1],e.e[2]-t.e[2])}static scale(e,t){return new a(e.e[0]*t,e.e[1]*t,e.e[2]*t)}static mul(e,t){return new a(e.e[0]*t.e[0],e.e[1]*t.e[1],e.e[2]*t.e[2])}static div(e,t){return new a(e.e[0]/t,e.e[1]/t,e.e[2]/t)}static mag(e){return Math.sqrt(a.lengthSquared(e))}static lengthSquared(e){return e.e[0]*e.e[0]+e.e[1]*e.e[1]+e.e[2]*e.e[2]}static dot(e,t){return e.e[0]*t.e[0]+e.e[1]*t.e[1]+e.e[2]*t.e[2]}static cross(e,t){return new a(e.e[1]*t.e[2]-e.e[2]*t.e[1],e.e[2]*t.e[0]-e.e[0]*t.e[2],e.e[0]*t.e[1]-e.e[1]*t.e[0])}static normalize(e){const t=a.mag(e);return t===0?new a(0,0,0):a.div(e,t)}}class s extends a{constructor(e,t,n){super(e,t,n)}static legalize(e){return new s(Math.min(Math.max(e.e[0],0),1),Math.min(Math.max(e.e[1],0),1),Math.min(Math.max(e.e[2],0),1))}static writeColor(e,t,n){const i=s.scale(s.legalize(e),255);n[t]=i.e[0],n[t+1]=i.e[1],n[t+2]=i.e[2],n[t+3]=255}}const w=()=>{const n=new Uint8Array(262144);for(let l=0;l<256;l++)for(let u=0;u<256;u++){const m=((256-l)*256+u)*4,h=new s(u/256,l/256,.25);s.writeColor(h,m,n)}const i=document.getElementById("canvas");i.width=256,i.height=256;const r=i.getContext("2d");if(r===null)throw new Error("Failed to get context");const c=new Uint8ClampedArray(n),g=new ImageData(c,256,256);r.putImageData(g,0,0)};w();
