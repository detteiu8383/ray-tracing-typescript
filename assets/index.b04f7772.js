var z=Object.defineProperty;var C=(c,t,e)=>t in c?z(c,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):c[t]=e;var g=(c,t,e)=>(C(c,typeof t!="symbol"?t+"":t,e),e);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))s(r);new MutationObserver(r=>{for(const o of r)if(o.type==="childList")for(const i of o.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&s(i)}).observe(document,{childList:!0,subtree:!0});function e(r){const o={};return r.integrity&&(o.integrity=r.integrity),r.referrerpolicy&&(o.referrerPolicy=r.referrerpolicy),r.crossorigin==="use-credentials"?o.credentials="include":r.crossorigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function s(r){if(r.ep)return;r.ep=!0;const o=e(r);fetch(r.href,o)}})();class n{constructor(t,e,s){g(this,"e",[0,0,0]);this.e[0]=t,this.e[1]=e,this.e[2]=s}static add(t,e){return new n(t.e[0]+e.e[0],t.e[1]+e.e[1],t.e[2]+e.e[2])}static sub(t,e){return new n(t.e[0]-e.e[0],t.e[1]-e.e[1],t.e[2]-e.e[2])}static scale(t,e){return new n(t.e[0]*e,t.e[1]*e,t.e[2]*e)}static mul(t,e){return new n(t.e[0]*e.e[0],t.e[1]*e.e[1],t.e[2]*e.e[2])}static div(t,e){return new n(t.e[0]/e,t.e[1]/e,t.e[2]/e)}static mag(t){return Math.sqrt(n.lengthSquared(t))}static lengthSquared(t){return t.e[0]*t.e[0]+t.e[1]*t.e[1]+t.e[2]*t.e[2]}static dot(t,e){return t.e[0]*e.e[0]+t.e[1]*e.e[1]+t.e[2]*e.e[2]}static cross(t,e){return new n(t.e[1]*e.e[2]-t.e[2]*e.e[1],t.e[2]*e.e[0]-t.e[0]*e.e[2],t.e[0]*e.e[1]-t.e[1]*e.e[0])}static normalize(t){const e=n.mag(t);return e===0?new n(0,0,0):n.div(t,e)}}class q{constructor(t,e){this.origin=t,this.direction=e}at(t){return n.add(this.origin,n.scale(this.direction,t))}}class S{constructor(t,e,s){g(this,"lowerLeftCorner");g(this,"horizontal");g(this,"vertical");this.origin=t;const r=s*e,o=1;this.horizontal=new n(r,0,0),this.vertical=new n(0,e,0),this.lowerLeftCorner=n.sub(n.sub(n.sub(t,n.div(this.horizontal,2)),n.div(this.vertical,2)),new n(0,0,o))}getRay(t,e){return new q(this.origin,n.sub(n.add(n.add(this.lowerLeftCorner,n.scale(this.horizontal,t)),n.scale(this.vertical,e)),this.origin))}}class a extends n{constructor(t,e,s){super(t,e,s)}static legalize(t){return new a(Math.min(Math.max(t.e[0],0),1),Math.min(Math.max(t.e[1],0),1),Math.min(Math.max(t.e[2],0),1))}static writeColor(t,e,s,r){const o=a.div(t,r),i=a.scale(a.legalize(o),255);s[e]=i.e[0],s[e+1]=i.e[1],s[e+2]=i.e[2],s[e+3]=255}}class j{constructor(t){g(this,"objects",[]);t&&(this.objects=t)}hit(t,e,s){let r=s,o=null;for(const i of this.objects){const h=i.hit(t,e,r);h&&(r=h.t,o=h)}return o}add(t){this.objects.push(t)}clear(){this.objects=[]}}class R{constructor(t,e){this.center=t,this.radius=e}hit(t,e,s){const r=n.sub(t.origin,this.center),o=n.lengthSquared(t.direction),i=n.dot(r,t.direction),h=n.lengthSquared(r)-this.radius*this.radius,f=i*i-o*h;if(f>0){const p=Math.sqrt(f),m=(-i-p)/o;if(m<s&&m>e){const d=t.at(m),l=n.div(n.sub(d,this.center),this.radius),u=n.dot(t.direction,l)<0;return{point:d,normal:u?l:n.scale(l,-1),t:m,frontFace:u}}const w=(-i+p)/o;if(w<s&&w>e){const d=t.at(w),l=n.div(n.sub(d,this.center),this.radius),u=n.dot(t.direction,l)<0;return{point:d,normal:u?l:n.scale(l,-1),t:w,frontFace:u}}}return null}}const D=(c,t)=>{const e=t.hit(c,0,1/0);if(e)return a.scale(a.add(e.normal,new a(1,1,1)),.5);const s=n.normalize(c.direction),r=.5*(s.e[1]+1);return a.add(a.scale(new a(1,1,1),1-r),a.scale(new a(.5,.7,1),r))},F=()=>{const c=1.7777777777777777,t=400,e=Math.floor(t/c),s=4,r=new Uint8Array(t*e*s),o=100,i=new j;i.add(new R(new n(0,0,-1),.5)),i.add(new R(new n(0,-100.5,-1),100));const h=new S(new n(0,0,0),2,c);for(let d=e-1;d>=0;d--)for(let l=0;l<t;l++){let u=new a(0,0,0);for(let y=0;y<o;y++){const L=(l+Math.random())/(t-1),M=(d+Math.random())/(e-1),x=h.getRay(L,M);u=a.add(u,D(x,i))}const b=((e-d)*t+l)*s;a.writeColor(u,b,r,o)}const f=document.getElementById("canvas");f.width=t,f.height=e;const p=f.getContext("2d");if(p===null)throw new Error("Failed to get context");const m=new Uint8ClampedArray(r),w=new ImageData(m,t,e);p.putImageData(w,0,0)};F();
